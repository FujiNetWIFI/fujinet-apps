TARGET_EXEC ?= 5cs

BUILD_DIR ?= ./build
SRC_DIRS ?= ./src

CC=cmoc
ASM=lwasm

#SRCS := $(shell find $(SRC_DIRS) -name *.c) $(shell find $(SRC_DIRS)/coco -name *.s) 
SRCS := $(shell ls $(SRC_DIRS)/*.c) $(shell find $(SRC_DIRS)/coco -name *.c)
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)


FUJINET_LIB_DIR = ./_libs/fujinet-lib-coco-4.7.9
FUJINET_LIB = fujinet-coco-4.7.9.lib

LIBS = -L $(FUJINET_LIB_DIR) -l:$(FUJINET_LIB) 

#	-L ./src/coco -lfujinet \


PACKAGE = 5CARD
VERSION = 0.1.00
TARGET = coco


CFLAGS= \
			--$(TARGET) \
			--intdir ./intermediates \
			--stack-space=512 \
			-fomit-frame-pointer \
			-DNDEBUG \
			-I $(FUJINET_LIB_DIR) \
			-DVERSION=\"$(VERSION)\" \
			-O2
# -DDISABLE_GRAPHICS
#			-I $(BCONTROL_LIB_DIR) \

#			--check-null \
#			-D_CMOC_CHECK_STACK_OVERFLOW_ --check-stack\


LDFLAGS= 			--$(TARGET) \
	-o$(TARGET_EXEC).bin


LDFLAGS_TEST= 			--$(TARGET) \
	-otestgame.bin

INC_DIRS := $(shell find $(SRC_DIRS) -type d)
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) $(LIBS)
	$(RM) $(TARGET_EXEC) $(TARGET_EXEC).dsk
	decb dskini $(TARGET_EXEC).dsk
	writecocofile $(TARGET_EXEC).dsk $(TARGET_EXEC).bin 
	#cp $(TARGET_EXEC).dsk ~/tnfs/
	cp $(TARGET_EXEC).dsk ~/Documents/fujinetpc-coco/SD
	@echo ........................................................................ ;ls -l $(TARGET_EXEC).bin;echo ........................................................................
	
	# Fast speed: -ui_active and -nothrottle starts the emulator in fast mode to quickly load the app. I then throttle it to 100% speed with a hotkey.
	#cd ~/mame_coco;mame coco -ui_active -nothrottle -window -nomaximize -resolution 1200x1024 -autoboot_delay 2 -nounevenstretch  -autoboot_command "runm\"5cs\n"
	cd ~/mame_coco;mame coco3 -ui_active -nothrottle -window -nomaximize -resolution 1200x1024 -autoboot_delay 2 -nounevenstretch  -autoboot_command "runm\"5cs\n"

	# Start normal speed
	# cd ~/mame_coco;mame coco -window -nomaximize -resolution 1200x1024 -autoboot_delay 2 -nounevenstretch  -autoboot_command "runm\"5cs\n"
	
	
# c source
$(BUILD_DIR)/%.c.o: %.c
	$(MKDIR_P) intermediates
	$(MKDIR_P) $(dir $@)
	$(CC) $(CFLAGS) -o $@ -c $<

# assy source
$(BUILD_DIR)/%.s.o: %.s
	$(MKDIR_P) $(dir $@)
	$(ASM) $(ASFLAGS) -fobj --output=$@ $<

.PHONY: clean

clean:
	$(RM) -r $(TARGET_EXEC)*
	$(RM) -r $(BUILD_DIR)*
	cd support/coco/gen;make

-include $(DEPS)

MKDIR_P ?= mkdir -p
